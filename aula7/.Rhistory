setwd("~/programando/erre/aprendendoerre")
setwd"~/programando/erre/aprendendoerre/aula7/"
setwd"~/programando/erre/aprendendoerre/aula7"
setwd"~/programando/erre/aprendendoerre/aula7")
setwd("~/programando/erre/aprendendoerre/aula7")
fileURL<-"https://www.dropbox.com/s/9wnr69i6bjhqyct/Snail_feeding.csv?dl=1"
download.file(fileURL, method = "curl", destfile = "~\arquivo.csv")
getwd)_
getwd()
download.file(fileURL, method = "curl", destfile = "D:/Users/Tomazini/Documents/programando/erre/aprendendoerre/aula7/Snail_feeding.csv")
fileURL<- "https://www.dropbox.com/s/v5hqpttjruxvpo6/Pica-pau.txt?dl=0"
download.file(fileURL, method = "curl", destfile = "D:/Users/Tomazini/Documents/programando/erre/aprendendoerre/aula7/pica-pau.txt")
read.table
V1 <- read.table("pica-pau.txt", header = TRUE, sep ="", dec=".")
V1 <- read.table("pica-pau.txt", header = TRUE, sep ="", dec=".")
fileURL<- "https://www.dropbox.com/s/v5hqpttjruxvpo6/Pica-pau.txt?dl=1"
download.file(fileURL, method = "curl", destfile = "D:/Users/Tomazini/Documents/programando/erre/aprendendoerre/aula7/pica-pau.txt")
fileURL<- "https://www.dropbox.com/s/dl/v5hqpttjruxvpo6/Pica-pau.txt"
download.file(fileURL, method = "curl", destfile = "D:/Users/Tomazini/Documents/programando/erre/aprendendoerre/aula7/pica-pau.txt")
fileURL<- "https://uce083227837c57c48034575dee7.dl.dropboxusercontent.com/cd/0/get/Bqgde75dHeuz0bvyJimhduc1bCJRHnZYGwulV5l6wnDAcIGzRHC5Y2lQuBJN20H4ZTwm94JaRXlGJ4nGH7S0GYg50xlUAmC-nl5mY0RhDy0dNKV1xuLQAgBXKkhannbs-L3kGX90yx1QBCiBAVSiqaQf3QB-yI78Dwj2otI-IBg9xQ/file?dl=1#"
download.file(fileURL, method = "curl", destfile = "D:/Users/Tomazini/Documents/programando/erre/aprendendoerre/aula7/pica-pau.txt")
V1 <- read.table("pica-pau.txt", header = TRUE, sep ="", dec=".")
View(V1)
View(V1)
View(V1)
sum(V1$especie == "verde")
Caracol_data <- read.csv(file="Snail_feeding.csv",
header = T, #cabeçario
strip.white = T, #remove espaços em branco antes ou depois dos dados
na.strings = "") #substitui vazias por NA
View(Caracol_data)
fileURL<-"https://www.dropbox.com/s/dl/9wnr69i6bjhqyct/Snail_feeding.csv"
download.file(fileURL, method = "curl", destfile = "D:/Users/Tomazini/Documents/programando/erre/aprendendoerre/aula7/Snail_feeding.csv")
fileURL<-"https://ucb31bd616e90996bdb5661f1a96.dl.dropboxusercontent.com/cd/0/get/BqhAcEO6FsRrJt2SoQ-oPC0FhOdzTiLhLLJAseSrcU7iKUFcDHyYW86vKDTqAGf5Lxw5RYeYb15OSFeFhOrIOiGqQvy72p2dsaDDamXLAcCaebY8KNJo-OMwWenb4MjmwlGAgqeXHfP3WmdP28bl8DOIKASOhrs4sPcway_9B4yt3w/file?dl=1#"
download.file(fileURL, method = "curl", destfile = "D:/Users/Tomazini/Documents/programando/erre/aprendendoerre/aula7/Snail_feeding.csv")
View(Caracol_data)
fileURL<-"https://ucb31bd616e90996bdb5661f1a96.dl.dropboxusercontent.com/cd/0/get/BqhAcEO6FsRrJt2SoQ-oPC0FhOdzTiLhLLJAseSrcU7iKUFcDHyYW86vKDTqAGf5Lxw5RYeYb15OSFeFhOrIOiGqQvy72p2dsaDDamXLAcCaebY8KNJo-OMwWenb4MjmwlGAgqeXHfP3WmdP28bl8DOIKASOhrs4sPcway_9B4yt3w/file?dl=1#"
download.file(fileURL, method = "curl", destfile = "D:/Users/Tomazini/Documents/programando/erre/aprendendoerre/aula7/Snail_feeding.csv")
fileURL<-"https://ucb31bd616e90996bdb5661f1a96.dl.dropboxusercontent.com/cd/0/get/BqhAcEO6FsRrJt2SoQ-oPC0FhOdzTiLhLLJAseSrcU7iKUFcDHyYW86vKDTqAGf5Lxw5RYeYb15OSFeFhOrIOiGqQvy72p2dsaDDamXLAcCaebY8KNJo-OMwWenb4MjmwlGAgqeXHfP3WmdP28bl8DOIKASOhrs4sPcway_9B4yt3w/file?dl=1#"
download.file(fileURL, method = "curl", destfile = "D:/Users/Tomazini/Documents/programando/erre/aprendendoerre/aula7/Snail_feeding.csv")
fileURL<-"https://www.dropbox.com/s/9wnr69i6bjhqyct/Snail_feeding.csv"
download.file(fileURL, method = "curl", destfile = "D:/Users/Tomazini/Documents/programando/erre/aprendendoerre/aula7/Snail_feeding.csv")
fileURL<-"https://www.dropbox.com//s/raw/9wnr69i6bjhqyct/Snail_feeding.csv"
download.file(fileURL, method = "curl", destfile = "D:/Users/Tomazini/Documents/programando/erre/aprendendoerre/aula7/Snail_feeding.csv")
fileURL<-"https://uc49e8e095a5fb390753f4ec4ef8.dl.dropboxusercontent.com/cd/0/inline/BqiajK8Qpe4J4zIivkT5BcXypp0kbGNvexm4IgoYwcp-PUa2ePjp1BkCbB-d-yAHQVy1ic3ZiwC89r7T3pnMF795gJW29aMs0dTsKHSvYdjC8xvocMYhvi1HojD5ugjKb7IaJanS5Oo3_2lr8Gg3IEDjq5MOF_aQiwl16wxbpKfIKg/file#"
download.file(fileURL, method = "curl", destfile = "D:/Users/Tomazini/Documents/programando/erre/aprendendoerre/aula7/Snail_feeding.csv")
fileURL<-"https://uc49e8e095a5fb390753f4ec4ef8.dl.dropboxusercontent.com/cd/0/inline/BqiajK8Qpe4J4zIivkT5BcXypp0kbGNvexm4IgoYwcp-PUa2ePjp1BkCbB-d-yAHQVy1ic3ZiwC89r7T3pnMF795gJW29aMs0dTsKHSvYdjC8xvocMYhvi1HojD5ugjKb7IaJanS5Oo3_2lr8Gg3IEDjq5MOF_aQiwl16wxbpKfIKg/file"
download.file(fileURL, method = "curl", destfile = "D:/Users/Tomazini/Documents/programando/erre/aprendendoerre/aula7/Snail_feeding.csv")
fileURL<-"https://uc49e8e095a5fb390753f4ec4ef8.dl.dropboxusercontent.com/cd/0/inline/BqiajK8Qpe4J4zIivkT5BcXypp0kbGNvexm4IgoYwcp-PUa2ePjp1BkCbB-d-yAHQVy1ic3ZiwC89r7T3pnMF795gJW29aMs0dTsKHSvYdjC8xvocMYhvi1HojD5ugjKb7IaJanS5Oo3_2lr8Gg3IEDjq5MOF_aQiwl16wxbpKfIKg/file?dl=1#"
download.file(fileURL, method = "curl", destfile = "D:/Users/Tomazini/Documents/programando/erre/aprendendoerre/aula7/Snail_feeding.csv")
Caracol_data <- read.csv(file="Snail_feeding.csv",
header = T, #cabeçario
strip.white = T, #remove espaços em branco antes ou depois dos dados
na.strings = "") #substitui vazias por NA
View(Caracol_data)
str(Caracol_data)
#os resultados mostram coisas que não deveriam estar ali, vamos cortar
Caracol_data <- Caracol_data[,1:7]
str(Caracol_data)
levels(Caracol_data$Sex)
fileURL<-"https://uc49e8e095a5fb390753f4ec4ef8.dl.dropboxusercontent.com/cd/0/inline/BqiajK8Qpe4J4zIivkT5BcXypp0kbGNvexm4IgoYwcp-PUa2ePjp1BkCbB-d-yAHQVy1ic3ZiwC89r7T3pnMF795gJW29aMs0dTsKHSvYdjC8xvocMYhvi1HojD5ugjKb7IaJanS5Oo3_2lr8Gg3IEDjq5MOF_aQiwl16wxbpKfIKg/file?dl=1#"
download.file(fileURL, method = "curl", destfile = "D:/Users/Tomazini/Documents/programando/erre/aprendendoerre/aula7/Snail_feeding.csv")
Caracol_data <- read.csv(file="Snail_feeding.csv",
header = T, #cabeçario
strip.white = T, #remove espaços em branco antes ou depois dos dados
na.strings = "") #substitui vazias por NA
str(Caracol_data)
#os resultados mostram coisas que não deveriam estar ali, vamos cortar
Caracol_data <- Caracol_data[,1:7]
str(Caracol_data)
#se tiver fator com numericos, converter para caractere e depois para numérico
#Caracol_data$Distance <- as.character(Caracol_data$distance)
#Caracol_data$Distance <- as.numeric(Caracol_data$distance)
caracol$sex
#se tiver fator com numericos, converter para caractere e depois para numérico
#Caracol_data$Distance <- as.character(Caracol_data$distance)
#Caracol_data$Distance <- as.numeric(Caracol_data$distance)
Caracol_data$sex
#se tiver fator com numericos, converter para caractere e depois para numérico
#Caracol_data$Distance <- as.character(Caracol_data$distance)
#Caracol_data$Distance <- as.numeric(Caracol_data$distance)
Caracol_data$sex[0]
#se tiver fator com numericos, converter para caractere e depois para numérico
#Caracol_data$Distance <- as.character(Caracol_data$distance)
#Caracol_data$Distance <- as.numeric(Caracol_data$distance)
str(Caracol_data$Sex)
unique(Caracol_data$Sex)
print(element)
for(Caracol_data$Sex){
print(element)
}
for(element , Caracol_data$Sex){
print(element)
}
for(element in Caracol_data$Sex){
print(Caracol_data$Sex)
}
unique(Caracol_data$Sex)
for(element in Caracol_data$Sex){
print(Caracol_data$Sex)
if(Caracol_data$Sex == "males" | Caracol_data$Sex == "Male"){
Caracol_data$Sex = "male"
}
if(Caracol_data$Sex == "female s"){
Caracol_data$Sex = "female"
}
}
if(Caracol_data$Sex[element] == "males" | Caracol_data$Sex == "Male"){
Caracol_data$Sex = "male"
}
if(Caracol_data$Sex[element] == "males" | Caracol_data$Sex[element] == "Male"){
Caracol_data$Sex = "male"
}
for(element in Caracol_data$Sex){
print(Caracol_data$Sex)
if(Caracol_data$Sex[element] == "males" | Caracol_data$Sex[element] == "Male"){
Caracol_data$Sex = "male"
}
if(Caracol_data$Sex[element] == "female s"){
Caracol_data$Sex = "female"
}
}
for(element in Caracol_data$Sex){
print(Caracol_data$Sex)
if(Caracol_data$Sex[element] == "males" | Caracol_data$Sex[element] == "Male"){
Caracol_data$Sex[element] = "male"
}
if(Caracol_data$Sex[element] == "female s"){
Caracol_data$Sex[element] = "female"
}
}
print(Caracol_data$Sex)
if(is.na(Caracol_data$Sex[element])){
next
}
if(Caracol_data$Sex[element] == "males" | Caracol_data$Sex[element] == "Male"){
Caracol_data$Sex[element] = "male"
}
if(Caracol_data$Sex[element] == "female s"){
Caracol_data$Sex[element] = "female"
}
for(element in Caracol_data$Sex){
print(Caracol_data$Sex)
if(is.na(Caracol_data$Sex[element])){
next
}
if(Caracol_data$Sex[element] == "males" | Caracol_data$Sex[element] == "Male"){
Caracol_data$Sex[element] = "male"
}
if(Caracol_data$Sex[element] == "female s"){
Caracol_data$Sex[element] = "female"
}
}
View(Caracol_data)
#print(Caracol_data$Sex)
for(element in Caracol_data$Sex){
#print(Caracol_data$Sex)
if(is.na(Caracol_data$Sex[element])){
next
}
if(Caracol_data$Sex[element] == "males" | Caracol_data$Sex[element] == "Male"){
Caracol_data$Sex[element] = "male"
print("Alterado")
}
if(Caracol_data$Sex[element] == "female s"){
Caracol_data$Sex[element] = "female"
}
}
for(element in Caracol_data$Sex){
#print(Caracol_data$Sex)
if(is.na(Caracol_data$Sex[element])){
next
}
if(Caracol_data$Sex[element] == "males" | Caracol_data$Sex[element] == "Male"){
Caracol_data$Sex[element] = "male"
print("Alterado")
}
if(Caracol_data$Sex[element] == "female s"){
Caracol_data$Sex[element] = "female"
}
}
print(Caracol_data$Sex)
for(element in Caracol_data$Sex){
print(Caracol_data$Sex)
if(is.na(Caracol_data$Sex[element])){
next
}
else{
if(Caracol_data$Sex[element] == "males" | Caracol_data$Sex[element] == "Male"){
Caracol_data$Sex[element] = "male"
print("Alterado")
}
if(Caracol_data$Sex[element] == "female s"){
Caracol_data$Sex[element] = "female"
}
}
}
for(element in Caracol_data$Sex){
print(Caracol_data$Sex)
if(is.na(Caracol_data$Sex[element])){
print(element)
next
}
else{
if(Caracol_data$Sex[element] == "males" | Caracol_data$Sex[element] == "Male"){
Caracol_data$Sex[element] = "male"
print("Alterado")
}
if(Caracol_data$Sex[element] == "female s"){
Caracol_data$Sex[element] = "female"
}
}
}
print("element")
for(element in Caracol_data$Sex){
print(Caracol_data$Sex)
if(is.na(Caracol_data$Sex[element])){
print("element")
next
}
else{
if(Caracol_data$Sex[element] == "males" | Caracol_data$Sex[element] == "Male"){
Caracol_data$Sex[element] = "male"
print("Alterado")
}
if(Caracol_data$Sex[element] == "female s"){
Caracol_data$Sex[element] = "female"
}
}
}
View(Caracol_data)
fileURL<-"https://uc49e8e095a5fb390753f4ec4ef8.dl.dropboxusercontent.com/cd/0/inline/BqiajK8Qpe4J4zIivkT5BcXypp0kbGNvexm4IgoYwcp-PUa2ePjp1BkCbB-d-yAHQVy1ic3ZiwC89r7T3pnMF795gJW29aMs0dTsKHSvYdjC8xvocMYhvi1HojD5ugjKb7IaJanS5Oo3_2lr8Gg3IEDjq5MOF_aQiwl16wxbpKfIKg/file?dl=1#"
download.file(fileURL, method = "curl", destfile = "D:/Users/Tomazini/Documents/programando/erre/aprendendoerre/aula7/Snail_feeding.csv")
Caracol_data <- read.csv(file="Snail_feeding.csv",
header = T, #cabeçario
strip.white = T, #remove espaços em branco antes ou depois dos dados
na.strings = "") #substitui vazias por NA
View(Caracol_data)
str(Caracol_data)
Caracol_data <- read.csv(file="Snail_feeding.csv",
header = T, #cabeçario
strip.white = T, #remove espaços em branco antes ou depois dos dados
stringsAsFactors=TRUE,
na.strings = "") #substitui vazias por NA
str(Caracol_data)
#os resultados mostram coisas que não deveriam estar ali, vamos cortar
Caracol_data <- Caracol_data[,1:7]
str(Caracol_data)
unique(Caracol_data$Sex)
levels(Caracol_data$Sex)
#levels(Caracol_data$Sex)
#[1] "female"   "female s" "male"     "Male"
#[5] "males"
levels(Caracol_data$Sex) [2] <- "female"
levels(Caracol_data$Sex) [3] <- "male"
levels(Caracol_data$Sex) [3] <- "male"
levels(Caracol_data$Sex)
str(Caracol_data)
Caracol_data$Distance <as.character(Caracol_data$Distance)
str(Caracol_data)
Caracol_data$Distance <as.character(Caracol_data$Distance)
str(Caracol_data)
Caracol_data$Distance <as.character(Caracol_data$Distance)
Caracol_data$Distance <- as.character(Caracol_data$Distance)
Caracol_data$Distance <- as.numeric(Caracol_data$Distance)
which(is.na(Caracol_data$Distance))
Caracol_data$Distance[682] <- 0.58
which(is.na(Caracol_data$Distance))
Caracol_data$Distance[755] <- 0.356452
which(is.na(Caracol_data$Distance))
which(is.na(Caracol_data$Distance))
str(Caracol_data)
which(duplicated(Caracol_data))
which(duplicated(Caracol_data))
Caracol_data<-Caracol_data[-index,]
index <- which(duplicated(Caracol_data))
Caracol_data<-Caracol_data[-index,]
wich(duplicated(Caracol_data))
which(duplicated(Caracol_data))
which(duplicated(Caracol_data))
str(Caracol_data)
summary(Caracol_data)
Caracol_data[wich(Caracol_data$Depth >2),]
#linha muito fora do padrão, vamos trocar:
Caracol_data[which(Caracol_data$Depth > 2),]
#linha muito fora do padrão, vamos trocar:
Caracol_data[which(Caracol_data$Depth > 2),]
Caracol_data[8,6] <- 1.62 #linha 8, variavel 6
summary(Caracol_data)
#sort e order
#ordenar vetores únicos:
sort(Caracol_data$Depth)
#ordenar data frame
Caracol_data[order(Caracol_data$Depth,Caracol_data$Temp),]
#decrescente
Caracol_data[order(Caracol_data$Depth,Caracol_data$Temp), decreasing= TRUE, ]
#decrescente
Caracol_data[order(Caracol_data$Depth,Caracol_data$Temp,decreasing= TRUE),  ]
write.csv( Caracol_data, #objeto que quero exportar
file="Caracol_data_checked.csv", #nome do arquivo
row.names = FALSE #exclui nome das linhas
) #para o csv
download.file(fileSource,method = "curl", destfile = "D:/Users/Tomazini/Documents/programando/erre/aprendendoerre/aula7/gatos.csv")
fileSource <- "https://www.dropbox.com/s/w4xv9urbowbig3s/catsM.csv?dl=1"
download.file(fileSource,method = "curl", destfile = "D:/Users/Tomazini/Documents/programando/erre/aprendendoerre/aula7/gatos.csv")
fileSource <- "https://www.dropbox.com/s/dl/w4xv9urbowbig3s/catsM.csv"
download.file(fileSource,method = "curl", destfile = "D:/Users/Tomazini/Documents/programando/erre/aprendendoerre/aula7/gatos.csv")
fileSource <- "https://ucdeacd5878ed2d420a73b175055.dl.dropboxusercontent.com/cd/0/get/Bqinqvm-739uowf-nYr804YuhcRc0HXVMd_vuaFlqS-6oy-mdKySge8lrfX4rhc7wyjCNBkd7hukSkxpXpm2_5MgZlhj44z2zA-du4STml6tH72mHSppZuQIT4I66AmjAf6D0FvE1NYNf91a4wAbgWd1kZMY6gSsk8iRJ0m4gQEu1w/file?dl=1#"
download.file(fileSource,method = "curl", destfile = "D:/Users/Tomazini/Documents/programando/erre/aprendendoerre/aula7/gatos.csv")
gatos <- read.csv(file="gatos.csv",
header = T, #cabeçario
strip.white = T, #remove espaços em branco antes ou depois dos dados
stringsAsFactors=TRUE, #normalizar como factor os dados
na.strings = "") #substitui vazias por NA
summary(gatos)
Caracol_data_checked <- read.csv(file="Caracol_data_checked.csv")
View(Caracol_data_checked)
summary(Caracol_data_checked)
which(Caracol_data_checked, Caracol_data_checked$Sex=="male")
min(Caracol_data_checked[Caracol_data_checked=="male"]$Distance,)
min(Caracol_data_checked=="male")
Caracol_data_checked=="male"
Caracol_data_checked[Caracol_data_checked=="male",]
View(Caracol_data_checked)
Caracol_data_checked[Caracol_data_checked$Sex=="male",]
minMasc <- min(Caracol_data_checked[Caracol_data_checked$Sex=="male",])
Masc <- min(Caracol_data_checked[Caracol_data_checked$Sex=="male",]$Distance)
Fem <- min(Caracol_data_checked[Caracol_data_checked$Sex=="female",]$Distance)
menor <- min(Caracol_data_checked[Caracol_data_checked$Sex=="female",Caracol_data_checked$Size=="small",]$Distance)
menor <- min(Caracol_data_checked[Caracol_data_checked$Sex=="female" & Caracol_data_checked$Size=="small",]$Distance)
menor <- min(Caracol_data_checked[Caracol_data_checked$Sex=="female" & Caracol_data_checked$Size=="small",]$Distance)
menor <- Caracol_data_checked[Caracol_data_checked$Sex=="female" & Caracol_data_checked$Size=="small",]
femininosPequenos <- Caracol_data_checked[Caracol_data_checked$Sex=="female" & Caracol_data_checked$Size=="small",]
min(femininosPequenos$Distance)
View(femininosPequenos)
max(femininosPequenos)
max(femininosPequenos$Distance)
femininosPequenos <- Caracol_data_checked[Caracol_data_checked$Sex=="female" & Caracol_data_checked$Size=="small",]
min(femininosPequenos$Distance)
max(femininosPequenos$Distance)
min(femininosPequenos$Distance, na.rm = T)
max(femininosPequenos$Distance, na.rm = T)
fileSource <- "https://www.dropbox.com/s/jci311cfsj6uva7/Sparrows.csv?dl=0"
download.file(fileSource,method = "curl", destfile = "D:/Users/Tomazini/Documents/programando/erre/aprendendoerre/aula7/Sparrow.csv")
fileSource <- "https://www.dropbox.com/s/raw/jci311cfsj6uva7/Sparrows.csv"
download.file(fileSource,method = "curl", destfile = "D:/Users/Tomazini/Documents/programando/erre/aprendendoerre/aula7/Sparrow.csv")
fileSource <- "https://ucd0180d6e3f2ffef9273d196a42.dl.dropboxusercontent.com/cd/0/inline/BqhQX2bACh200XmDL0PhS_JYQWBpJUGBoGVomYMN1q7M4e7fDL4JpaYmXSpPvG8qwDwGWEr_lh7zWm73EJvG1oYZXA62ZGj5_3g02gOEM2XXEzJvBsRLvJwygvJ4ohwYO9Kp96e9ShhEQp1tWl51aGnVbCRKnMLzx31fFaNWvTqK1w/file#"
download.file(fileSource,method = "curl", destfile = "D:/Users/Tomazini/Documents/programando/erre/aprendendoerre/aula7/Sparrow.csv")
read.table(file = "Sparrows.csv", header = TRUE)
fileSource <- "https://ucd0180d6e3f2ffef9273d196a42.dl.dropboxusercontent.com/cd/0/inline/BqhQX2bACh200XmDL0PhS_JYQWBpJUGBoGVomYMN1q7M4e7fDL4JpaYmXSpPvG8qwDwGWEr_lh7zWm73EJvG1oYZXA62ZGj5_3g02gOEM2XXEzJvBsRLvJwygvJ4ohwYO9Kp96e9ShhEQp1tWl51aGnVbCRKnMLzx31fFaNWvTqK1w/file#"
download.file(fileSource,method = "curl", destfile = "D:/Users/Tomazini/Documents/programando/erre/aprendendoerre/aula7/Sparrows.csv")
read.table(file = "Sparrows.csv", header = TRUE)
Sparrows <- read.table(file = "Sparrows.csv", header = TRUE)
view(Sparrows)
view(Sparrows)
View(Sparrows)
Sparrows <- read.table(file = "Sparrows.csv", header = TRUE, sep=",")
View(Sparrows)
SSTS <- Sparrows$Species=="SSTS"
SSTS <- [Sparrows$Species=="SSTS",]
SSTS <- Sparrows[Sparrows$Species=="SSTS",]
View(Sparrows)
View(SSTS)
min(SSTS$Head)
max(SSTS$Head)
which(duplicated(Sparrows))
summary(Sparrows)
Sparrows <- read.table(file = "Sparrows.csv", header = TRUE, sep=",",stringsAsFactors=TRUE)
summary(Sparrows)
SSTS <- Sparrows[Sparrows$Species=="SSTS",]
min(SSTS$Head)
max(SSTS$Head)
summary(Sparrows)
levels(Sparrows$Sex)
levels(Sparrows$Sex)[1] <- "Female"
levels(Sparrows$Sex)[1] <- "Female"
levels(Sparrows$Sex)
levels(Sparrows$Sex)[2] <- "Female"
levels(Sparrows$Sex)
levels(Sparrows$Sex)[3] <- "Male"
levels(Sparrows$Sex)
FemeSparrows <- FemeSparrows[FemeSparrows$Sex=="Female",]
FemeSparrows <- Sparrows[Sparrows$Sex=="Female",]
View(FemeSparrows)
MaleSparrows <- Sparrows[Sparrows$Sex=="Male",]
mean(FemeSparrows$Tarsus)
mean(MaleSparrows$Tarsus)
median(FemeSparrows$Tarsus)
median(MaleSparrows$Tarsus)
which(is.na(Sparrows$Wing))
Sparrows[64]
str(Sparrows[64])
str(Sparrows[,64])
str(Sparrows[64,])
Sparrows[64,3] <- 59
str(Sparrows[64,])
which(is.na(Sparrows$Wing))
Sparrows[250,3] <- 56.5
Sparrows[806,3] <- 57
which(is.na(Sparrows$Wing))
mean(Sparrows$Wing)
Sparrows_Ordenado<-Sparrows[order(Sparrows$Wing,Sparrows$Head),]
View(Sparrows_Ordenado)
