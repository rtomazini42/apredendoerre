colors=brewer.pal("Dark2"),res=300,scale=c(4,.5))
wordcloud(corpus, min.freq = 1, max.words = 70,
random.order = FALSE, rot.per = 0.25,
colors=brewer.pal(10,"Dark2"),res=300,scale=c(4,.5))
wordcloud(corpus, min.freq = 1, max.words = 70,
random.order = FALSE, rot.per = 0.25,
colors=brewer.pal(10,"Dark2"),res=300,scale=c(12,.5))
wordcloud(corpus, min.freq = 1, max.words = 70,
random.order = FALSE, rot.per = 0.25,
colors=brewer.pal(10,"Dark2"),res=300,scale=c(12,.3))
#plotar gráfico de barras
barplot(aux, las=2, col = rainbow(10))
barplot(aux, las=2, col = rainbow(10), names.arg = d[1:10])
#plotar gráfico de barras
barplot(aux, las=2, col = rainbow(10), names.arg = aux[1:10])
barplot(aux, las=2, col = rainbow(10), names.arg = 10)
barplot(aux, las=2, col = rainbow(10), names.arg = 10)
barplot(aux[1:10], las=2, col = rainbow(10))
barplot(aux[1:10], las=2, col ="lightblue", main ="Most frequent words",)
barplot(fre[1:10,], las = 2, names.arg = aux[1:10,],
col ="lightblue", main ="Most frequent words",
ylab = "Word frequencies")
barplot(fre[1:10,], las = 2, names.arg = aux[1:10],
col ="lightblue", main ="Most frequent words",
ylab = "Word frequencies")
head(aux)
barplot(aux[1:10], las=2, col ="lightblue", main ="Most frequent words",)
#plotar gráfico de barras
barplot(aux[1:10], las=2, col ="lightblue", main ="Palavras mais usadas",)
#plotar gráfico de barras
barplot(aux[1:5], las=2, col ="lightblue", main ="Palavras mais usadas",)
barplot(aux, las=2, col = rainbow(10))
motivos <- read.csv("motivos.csv", header = T, stringsAsFactors = FALSE)
motivos <- read_csv("motivos.csv")
#colapsando todos os comentários em um vetor de uma posição
motivos <- paste(motivos$`2019.1`, collapse = " ")
#processar o texto é com tm
#converter os dados em um formato chamado corpus que
#pode ser processado pelo tm
VS <- VectorSource(motivos)
corpus <- Corpus(VS)
#Verificar o corpus gerado
inspect(corpus)
#limpeza
#tudo minúsculo
corpus <- tm_map(corpus, content_transformer(tolower))
#removendo pontuação
corpus <- tm_map(corpus, removePunctuation)
#removendo espaços extras em branco
corpus <- tm_map(corpus, stripWhitespace)
#remover numeros
corpus <- tm_map(corpus, removeNumbers)
#remover stopwords
corpus <- tm_map(corpus, removeWords, stopwords('portuguese'))
#verificação
inspect(corpus)
#converter para o formato de matrix
tdm <- as.matrix(TermDocumentMatrix(corpus))
#Fornecer as frequencias ordenadas de cada palavra
fre <- sort(rowSums(tdm), decreasing = TRUE)
#escolhedo um subconjunto dos dados
aux<- subset(fre, fre>2)
#plotar gráfico de barras
barplot(aux, las=2, col = rainbow(10))
#processar o texto é com tm
#converter os dados em um formato chamado corpus que
#pode ser processado pelo tm
VS <- VectorSource(tweets)
corpus <- Corpus(VS)
#Verificar o corpus gerado
inspect(corpus)
#limpeza
#tudo minúsculo
corpus <- tm_map(corpus, content_transformer(tolower))
#removendo pontuação
corpus <- tm_map(corpus, removePunctuation)
#removendo espaços extras em branco
corpus <- tm_map(corpus, stripWhitespace)
#remover numeros
corpus <- tm_map(corpus, removeNumbers)
#remover stopwords
corpus <- tm_map(corpus, removeWords, stopwords('portuguese'))
#verificação
inspect(corpus)
#converter para o formato de matrix
tdm <- as.matrix(TermDocumentMatrix(corpus))
#Fornecer as frequencias ordenadas de cada palavra
fre <- sort(rowSums(tdm), decreasing = TRUE)
#escolhedo um subconjunto dos dados
aux<- subset(fre, fre>2)
#plotar gráfico de barras
barplot(aux[1:5], las=2, col ="lightblue", main ="Palavras mais usadas",)
head(aux)
barplot(aux[1:25], las=2, col ="lightblue", main ="Palavras mais usadas",)
#plotar gráfico de barras
barplot(aux[1:25], las=1, col ="lightblue", main ="Palavras mais usadas",)
typeof(aux)
head(aux)
head(aux)
typeof(fre)
head(fre)
aux2 <- aux[1:25]
#plotar gráfico de barras
barplot(aux2, las=2, col ="lightblue", main ="Palavras mais usadas",)
aux2 <- aux[1:25]
#plotar gráfico de barras
barplot(aux2, las=2, col ="lightblue", main ="Palavras mais usadas",)
head(aux2)
head(aux2$head())
head(aux2[1])
head(colnames(aux2))
colnames(aux2)
row.names(aux2)
row.names(aux2)
print(row.names(aux2))
head(aux2[[2]])
head(aux2[[1]])
head(aux2[1[1]])
head(aux2[1[]])
head(aux2[1[]])
head(aux2[1])
head(aux2[1][1])
head(aux2[1,[1]])
head(aux2[1[1]])
dimnames(aux2[1])
dimnames(aux2)
names(aux2)
barplot(aux2, las=2, col ="lightblue", main ="Palavras mais usadas",names.arg = names(aux2) )
aux2 <- aux[1:20]
#plotar gráfico de barras
barplot(aux2, las=2, col ="lightblue", main ="Palavras mais usadas",names.arg = names(aux2) )
#plotar gráfico de barras
barplot(aux2, las=1, col ="lightblue", main ="Palavras mais usadas",names.arg = names(aux2) )
barplot(aux2, las=5, col ="lightblue", main ="Palavras mais usadas",names.arg = names(aux2) )
barplot(aux2, las=2, col ="lightblue", main ="Palavras mais usadas",names.arg = names(aux2), density=10 )
#plotar gráfico de barras
barplot(aux2, las=2, col ="lightblue", main ="Palavras mais usadas",names.arg = names(aux2), density=1 )
tabela <-table(aux2)
head(tabela)
age <- c(17,18,18,17,18,19,18,16,18,18)
table(age)
table(corpus)
table(tdm)
head(table(tdm))
barplot(table(tdm),
main="Age Count of 10 Students",
xlab="Age",
ylab="Count",
border="red",
col="blue",
density=10
)
barplot(table(age),
main="Age Count of 10 Students",
xlab="Age",
ylab="Count",
border="red",
col="blue",
density=10
)
barplot(aux2, las=2, col ="lightblue", main ="Palavras mais usadas",names.arg = names(aux2))
barplot(aux2, las=2, col ="lightblue", main ="Palavras mais usadas",names.arg = names(aux2))
barplot(aux2, las=2, col ="lightblue", main ="Palavras mais usadas",names.arg = names(aux2), horiz=T,)
barplot(table(age),
main="Age Count of 10 Students",
xlab="Age",
ylab="Count",
border="red",
col="blue",
density=10,
horiz=T,
)
barplot(d[1:10,]$freq, las = 2, names.arg = d[1:10,]$word,
col ="lightblue", main ="Most frequent words",
ylab = "Word frequencies")
wordcloud(corpus, min.freq = 1, max.words = 70,
random.order = FALSE, rot.per = 0.25,
colors=brewer.pal(10,"Dark2"),res=300,scale=c(12,.3))
wordcloud(corpus, min.freq = 1, max.words = 70,
random.order = FALSE, rot.per = 0.25,
colors=brewer.pal(10,"Dark2"),res=150,scale=c(12,.3))
barplot(aux2, las=2, col ="lightblue", main ="Palavras mais usadas",names.arg = names(aux2), horiz=T,)
wordcloud(corpus, min.freq = 1, max.words = 70,
random.order = FALSE, rot.per = 0.25,
colors=brewer.pal(10,"Dark2"),res=10,scale=c(12,.3))
barplot(aux2, las=2, col ="lightblue", main ="Palavras mais usadas",names.arg = names(aux2), horiz=T,)
age <- c(17,18,18,17,18,19,18,16,18,18)
table(tdm)
head(table(tdm))
barplot(table(age),
main="Age Count of 10 Students",
xlab="Age",
ylab="Count",
border="red",
col="blue",
density=10,
horiz=T,
)
install.packages("ggplot2")
library(ggplot2)
# Create data
data <- data.frame(
name=c("ANDERSON FERREIRA","DANILO CABRAL","JONES MANOEL","MARÍLIA ARRAES","MIGUEL COELHO","PASTOR WELLINGTON", "RAQUEL LYRA") ,
value=c(8265000,10442000,23261,6037500,6875089, 390000,5859000)
)
# Barplot
ggplot(data, aes(x=Candidato, y=Total)) +
geom_bar(stat = "identity")
data <- data.frame(
Candidato=c("ANDERSON FERREIRA","DANILO CABRAL","JONES MANOEL","MARÍLIA ARRAES","MIGUEL COELHO","PASTOR WELLINGTON", "RAQUEL LYRA") ,
Total=c(8265000,10442000,23261,6037500,6875089, 390000,5859000)
)
ggplot(data, aes(x=Candidato, y=Total)) +
geom_bar(stat = "identity")
barplot(height=data$Total, names=data$Candidato)
barplot(height=data$Total, names=data$Candidato,horiz=T, las=1)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000))
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000), res=300)
par(mar=c(11,4,4,4))
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000))
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000),cex.names=0.5)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000),cex.names=0.7)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000),cex.names=0.6)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000),cex.names=0.5)
par(mar=c(11,4,4,4))
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000),cex.names=0.5,scipen=999)
scipen=999
options(scipen=999)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000),cex.names=0.5)
par(mar=c(10,4,4,4))
par(mar=c(10,4,4,4))
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000),cex.names=0.5)
par(mar=c(3,4,4,4))
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000),cex.names=0.5)
max.col(data$Total)
max(data$Total)
par(mar=c(3,4,4,4))
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10542000),cex.names=0.5)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,20542000),cex.names=0.5
)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,11542000),cex.names=0.5)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,14542000),cex.names=0.5)
sum(data$Total)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,13542000),cex.names=0.5)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,13542000),cex.names=0.5, color="dark")
?barplot
barplot(height=data$Total, names=data$Candidato, ylim=c(0,13542000),cex.names=0.5, col="blue")
barplot(height=data$Total, names=data$Candidato, ylim=c(0,13542000),cex.names=0.5, col="#fffff")
barplot(height=data$Total, names=data$Candidato, ylim=c(0,13542000),cex.names=0.5, col="#ffffff")
barplot(height=data$Total, names=data$Candidato, ylim=c(0,13542000),cex.names=0.5, col="lightred")
barplot(height=data$Total, names=data$Candidato, ylim=c(0,13542000),cex.names=0.5, col="darkred")
library(ggplot2)
# Create data
data <- data.frame(
Candidato=c("ANDERSON FERREIRA","DANILO CABRAL","JONES MANOEL","MARÍLIA ARRAES","MIGUEL COELHO","PASTOR WELLINGTON", "RAQUEL LYRA") ,
Total=c(8265000,10442000,23261,6037500,6875089, 390000,5859000)
)
# Barplot
ggplot(data, aes(x=Candidato, y=Total)) +
geom_bar(stat = "identity")
options(scipen=999)
par(mar=c(3,4,4,4))
barplot(height=data$Total, names=data$Candidato, ylim=c(0,13542000),cex.names=0.5, col="darkred")
sum(data$Total)
(23261 * 100)/sum(data$Total)
(8265000 * 100)/sum(data$Total)
(10442000 * 100)/sum(data$Total)
(6037500 * 100)/sum(data$Total)
(6875089 * 100)/sum(data$Total)
(390000 * 100)/sum(data$Total)
(5859000 * 100)/sum(data$Total)
0.06138787 + 21.81208 + 27.55738 + 15.93351 + 18.14398 + 1.029245 + 15.46243
setwd("~/programando/erre/aprendendoerre/aula12")
mean(airquality$Temp)
options(digits = 4)
mean(airquality$Temp)
rowMeans(airquality[c("Temp", "Wind")])
colMeans(airquality[c("Temp", "Wind")])
median(airquality$Temp)
x<- c(10,10,2,3,4,5,6)
y <- table(x)
#pegar elemento com maior frequencia
names(y)[wich(y==max(y))]
names(table(x))[table(x)==max(table(x))]
names(table(airquality$Temp))[table(airquality$Temp)==max(table(airquality$Temp))]
table(airquality$Temp)
moda <- function(x){
names(table(x))[table(x)==max(table(x))]
}
moda(x)
moda(airquality$Temp)
#Quartis, valores de uma série que a dividem em 4 partes iguais
#usando os conceitos de mediana
#q1,q2,q3
summary(airquality$Temp)
min(airquality$Temp)
max(airquality$Temp)
#amplitude:
at<- max(airquality$Temp) - min(airquality$Temp)
at
#Caculando variancia
var(airquality$Temp)
#desvio padrão
sd(airquality$Temp)
#temperaturas "normais"
cat("[", mean(airquality$Temp-sd(airquality$Temp), "-", mean(airquality$Temp)-sd(airquality$Temp)))
#temperaturas "normais"
cat("[", mean(airquality$Temp-sd(airquality$Temp), "-", mean(airquality$Temp)-sd(airquality$Temp)),"]")
#temperaturas "normais"
cat("[", mean(airquality$Temp)-sd(airquality$Temp), "-", mean(airquality$Temp)-sd(airquality$Temp),"]")
#temperaturas "normais"
cat("[", mean(airquality$Temp)-sd(airquality$Temp), "-", mean(airquality$Temp)+sd(airquality$Temp),"]")
sample(x=1:10, size =5)
sample(x=1:10, size =5, replace = TRUE)
sample(x=1:10, size =10, replace = TRUE)
x<-c("cara","coroa")
y<-sample(x, size =100, replace = TRUE )
table(y)
x<-c("cara","coroa")
y<-sample(x, size =100, replace = TRUE )
table(y)
y<-sample(x, size =10000, replace = TRUE )
table(y)
y<-sample(x, size =100000, replace = TRUE )
table(y)
y<-sample(x, size =1000000, replace = TRUE )
table(y)
y<-sample(x, size =10000000, replace = TRUE )
table(y)
sample(x=c("a","b"),
prob = c(.9,.1),
size=10,
replace=TRUE)
sample(x=c("a","b"),
prob = c(.9,.1),
size=10,
replace=TRUE)
sample(x=c("a","b"),
prob = c(.9,.1),
size=10,
replace=TRUE)
sample(x=c("a","b"),
prob = c(.9,.1),
size=10,
replace=TRUE)
sample(x=c("a","b"),
prob = c(.9,.1),
size=10,
replace=TRUE)
sample(x=c("a","b"),
prob = c(.9,.1),
size=10,
replace=TRUE)
sample(x=c("a","b"),
prob = c(.9,.1),
size=10,
replace=TRUE)
sample(x=c("a","b"),
prob = c(.9,.1),
size=10,
replace=TRUE)
y<-sample(x, size =100, replace = TRUE , prob = (.1,.9))
x<-c("cara","coroa")
y<-sample(x, size =100, replace = TRUE , prob = (.1,.9))
y<-sample(x, size =100, replace = TRUE , prob = c(.1,.9))
table(y)
x<-c("cara","coroa")
y<-sample(x, size =100, replace = TRUE , prob = c(.1,.9))
table(y)
x<-c("cara","coroa")
y<-sample(x, size =100, replace = TRUE , prob = c(.1,.9))
table(y)
x<-c("cara","coroa")
y<-sample(x, size =100, replace = TRUE , prob = c(.1,.9))
table(y)
x<-c("cara","coroa")
y<-sample(x, size =100, replace = TRUE , prob = c(.1,.9))
table(y)
install.packages('splitstackshape')
library(splitstackshape)
stratified(iris, group = "Species", size=5, replace=T)
#infert proporcionais a cada grupo da coluna education
stratified(infert, group="education", size = c(.1,.5,.4), replace=T)
#infert proporcionais a cada grupo da coluna education
levels(infert$education)
sum(infert$education=="0-5yrs")
sum(infert$education=="0-5yrs")
sum(infert$education=="6-11yrs")
sum(infert$education=="12+ yrs")
sum(infert$education=="0-5yrs")/length(infert$education)
sum(infert$education=="6-11yrs")/length(infert$education)
sum(infert$education=="12+ yrs")/length(infert$education)
sd <- 6250
erro <- 500
nc <- (1-0.95)/2
n<- ((qnorm(nc,lower.tail = F)*sd)/erro)*2
n
n<- ((qnorm(nc,lower.tail = F)*sd)/erro)*2
n<- ((qnorm(nc,lower.tail = F)*sd)/erro)**2
n
sd <- 4.1681
N <- 2637
erro <- 1
nc <- (1-0.95)/2
n<- ((qnorm(nc,lower.tail = F)**2*sd**2*N)/erro**2*(N-1)+(qnorm(nc, lower.tail = F)**2*sd**2))
n
n<- (qnorm(nc,lower.tail = F)**2*sd**2*N)/((erro**2*(N-1))+(qnorm(nc, lower.tail = F)**2*sd**2))
n
sd <- 4.1681
N <- 2637
erro <- 1
nc <- (1-0.99)/2
n<- (qnorm(nc,lower.tail = F)**2*sd**2*N)/((erro**2*(N-1))+(qnorm(nc, lower.tail = F)**2*sd**2))
n
elementos <- c("a","b","c","d","e")
x< c(5,7,12,15,10)
tabela <- data.frame(elementos, x)
elementos <- c("a","b","c","d","e")
x< c(5,7,12,15,10)
tabela <- data.frame(elementos, x, stringsAsFactors = F)
elementos <- c("a","b","c","d","e")
x<- c(5,7,12,15,10)
tabela <- data.frame(elementos, x, stringsAsFactors = F)
sd <- sd(tabela$x)
erro <- 500
nc <- (1-0.95)/2
n<- ((qnorm(nc,lower.tail = F)*sd)/erro)**2
n
mean(tabela$x)
var(tabela$x)
sd <- 4250.00
erro <- 300
nc <- (1-0.90)/2
n<- ((qnorm(nc,lower.tail = F)*sd)/erro)**2
n
n
sd <- 5.0
N <- 1500
erro <- 1.5
nc <- (1-0.955)/2
n<- (qnorm(nc,lower.tail = F)**2*sd**2*N)/((erro**2*(N-1))+(qnorm(nc, lower.tail = F)**2*sd**2))
n
var(10.00:30:00)
var(10.00:30.0)
sd(10.00:30.0)
sd(10:30)
var(10.00:30.0)
sd <- 6.205
erro <- 1
nc <- (1-0.98)/2
n<- ((qnorm(nc,lower.tail = F)*sd)/erro)**2
n
sd <- 6.205
N <- 5000
erro <- 1.5
nc <- (1-0.955)/2
n<- (qnorm(nc,lower.tail = F)**2*sd**2*N)/((erro**2*(N-1))+(qnorm(nc, lower.tail = F)**2*sd**2))
n
#>30
pnorm(31, mean= 50, sd= 10)
#<30
pnorm(30, mean= 50, sd= 10) -pnorm(0, mean= 50, sd= 10)
#<30
pnorm(30, mean= 50, sd= 10) -pnorm(1, mean= 50, sd= 10)
#Distribuição normal padrão
#desviopadrao = 1
#media 0
#z
#z=3-1/1
pnorm(1)
#P(X>1)
pnorm(-2)
#P(X>1)
pnorm(0)
#P(X>1)
1-pnorm(1)
#P(x<-2)
pnorm(-2)
#P(x<0)
pnorm(0)
#P(X>1)
1-pnorm(1.28)
pnorm(0.9, mean= 90, sd= 21)
qnorm(0.9, mean= 90, sd= 21)
dv <- 3.8
mediaAmostra <- 30.2
n<-100
nc<-(1-0.95)/2
#Erro>
error<-dv/sqrt(n)
limiteInferior <- mediaAmostra-(qnorm(nc, lower.tail= F)*error)
limiteSuperior <- mediaAmostra+(qnorm(nc, lower.tail= F)*error)
cat("[",limiteInferior, "-", limiteSuperior,"]")
dv <- 47
mediaAmostra <- 658
n<-100
nc<-(1-0.90)/2
#Erro>
error<-dv/sqrt(n)
limiteInferior <- mediaAmostra-(qnorm(nc, lower.tail= F)*error)
limiteSuperior <- mediaAmostra+(qnorm(nc, lower.tail= F)*error)
cat("[",limiteInferior, "-", limiteSuperior,"]")
carbono <- c(4.37, 3.63, 2.78, 5.46, 2.18, 6.07, 3.24, 5.89, 4.86, 4.64)
dv <- sd(carbono)
mediaAmostra <- mean(carbono)
n<-10
nc<-(1-0.90)/2
#Erro>
error<-dv/sqrt(n)
limiteInferior <- mediaAmostra-(qnorm(nc, lower.tail= F)*error)
limiteSuperior <- mediaAmostra+(qnorm(nc, lower.tail= F)*error)
cat("[",limiteInferior, "-", limiteSuperior,"]")
