library(rtweet)
library(tm)
library(wordcloud)
library(syuzhet)
library(dplyr)
tweets <- search_tweets("@UP80BR", n=500, lang="pt")
typeof(tweets)
#convertendo para formato DF
#tweets <- twListToDF(tweets)
dataFrame <- tweets %>%
as_tibble()
tweets <- dataFrame$text
#pontuando os tweets
s<-get_nrc_sentiment(tweets)
#plotando grafico com sentimentos
barplot(colSums(s), las=2, col=rainbow(10),
ylab = "Contagem", main = "Sentimentos com a palavra @UP80BR em 500 tweets")
VS <- VectorSource(tweets)
corpus <- Corpus(VS)
#Verificar o corpus gerado
inspect(corpus)
#limpeza
#tudo minúsculo
corpus <- tm_map(corpus, content_transformer(tolower))
#removendo pontuação
corpus <- tm_map(corpus, removePunctuation)
#removendo espaços extras em branco
corpus <- tm_map(corpus, stripWhitespace)
#remover numeros
corpus <- tm_map(corpus, removeNumbers)
#remover stopwords
corpus <- tm_map(corpus, removeWords, stopwords('portuguese'))
#verificação
inspect(corpus)
#converter para o formato de matrix
tdm <- as.matrix(TermDocumentMatrix(corpus))
#Fornecer as frequencias ordenadas de cada palavra
fre <- sort(rowSums(tdm), decreasing = TRUE)
#escolhedo um subconjunto dos dados
aux<- subset(fre, fre>2)
#plotar gráfico de barras
barplot(aux, las=2, col = rainbow(10))
wordcloud(corpus, min.freq = 1, max.words = 60,
random.order = FALSE, rot.per = 0.35,
colors=brewer.pal(8,"Dark2"))
wordcloud(corpus, min.freq = 1, max.words = 60,
random.order = FALSE, rot.per = 0.35,
colors=brewer.pal(11,"Dark2"))
wordcloud(corpus, min.freq = 1, max.words = 60,
random.order = FALSE, rot.per = 0.35,
colors=brewer.pal(50,"Dark2"))
wordcloud(corpus, min.freq = 1, max.words = 100,
random.order = FALSE, rot.per = 0.35,
colors=brewer.pal(50,"Dark2"))
wordcloud(corpus, min.freq = 1, max.words = 70,
random.order = FALSE, rot.per = 0,
colors=brewer.pal(50,"Dark2"))
wordcloud(corpus, min.freq = 1, max.words = 70,
random.order = FALSE, rot.per = 0.25,
colors=brewer.pal(50,"Dark2"))
wordcloud(corpus, min.freq = 1, max.words = 70,
random.order = FALSE, rot.per = 0.25,
colors=brewer.pal(50,"Dark2"),width=12,height=8, units='in', res=300)
wordcloud(corpus, min.freq = 1, max.words = 70,
random.order = FALSE, rot.per = 0.25,
colors=brewer.pal(1,"Dark2"),width=12,height=8, units='in', res=300)
wordcloud(corpus, min.freq = 1, max.words = 70,
random.order = FALSE, rot.per = 0.25,
colors=brewer.pal(1,"Dark2"),width=12,height=8, units='in')
wordcloud(corpus, min.freq = 1, max.words = 70,
random.order = FALSE, rot.per = 0.25,
colors=brewer.pal(1,"Dark2"),width=1,height=8, units='in')
wordcloud(corpus, min.freq = 1, max.words = 70,
random.order = FALSE, rot.per = 0.25,
colors=brewer.pal(1,"Dark2"),width=1,height=1, units='in')
wordcloud(corpus, min.freq = 1, max.words = 70,
random.order = FALSE, rot.per = 0.25,
colors=brewer.pal(1,"Dark2"),width=1,height=1)
wordcloud(corpus, min.freq = 1, max.words = 70,
random.order = FALSE, rot.per = 0.25,
colors=brewer.pal(1,"Dark2"),width=12,height=10)
wordcloud(corpus, min.freq = 1, max.words = 70,
random.order = FALSE, rot.per = 0.25,
colors=brewer.pal(1,"Dark2"),res=300)
wordcloud(corpus, min.freq = 1, max.words = 70,
random.order = FALSE, rot.per = 0.25,
colors=brewer.pal(1,"Dark2"),par(mar = rep(0, 4)),res=300)
wordcloud(corpus, min.freq = 1, max.words = 70,
random.order = FALSE, rot.per = 0.25,
colors=brewer.pal(1,"Dark2"),res=300)
wordcloud = WordCloud(width=800, height=400).generate(corpus)
wordcloud <- WordCloud(width=800, height=400).generate(corpus)
wordcloud(corpus, min.freq = 1, max.words = 70,
random.order = FALSE, rot.per = 0.25,
colors=brewer.pal(1,"Dark2"),res=300,scale=c(4,.5))
wordcloud(corpus, min.freq = 1, max.words = 70,
random.order = FALSE, rot.per = 0.25,
colors=brewer.pal("Dark2"),res=300,scale=c(4,.5))
wordcloud(corpus, min.freq = 1, max.words = 70,
random.order = FALSE, rot.per = 0.25,
colors=brewer.pal(10,"Dark2"),res=300,scale=c(4,.5))
wordcloud(corpus, min.freq = 1, max.words = 70,
random.order = FALSE, rot.per = 0.25,
colors=brewer.pal(10,"Dark2"),res=300,scale=c(12,.5))
wordcloud(corpus, min.freq = 1, max.words = 70,
random.order = FALSE, rot.per = 0.25,
colors=brewer.pal(10,"Dark2"),res=300,scale=c(12,.3))
#plotar gráfico de barras
barplot(aux, las=2, col = rainbow(10))
barplot(aux, las=2, col = rainbow(10), names.arg = d[1:10])
#plotar gráfico de barras
barplot(aux, las=2, col = rainbow(10), names.arg = aux[1:10])
barplot(aux, las=2, col = rainbow(10), names.arg = 10)
barplot(aux, las=2, col = rainbow(10), names.arg = 10)
barplot(aux[1:10], las=2, col = rainbow(10))
barplot(aux[1:10], las=2, col ="lightblue", main ="Most frequent words",)
barplot(fre[1:10,], las = 2, names.arg = aux[1:10,],
col ="lightblue", main ="Most frequent words",
ylab = "Word frequencies")
barplot(fre[1:10,], las = 2, names.arg = aux[1:10],
col ="lightblue", main ="Most frequent words",
ylab = "Word frequencies")
head(aux)
barplot(aux[1:10], las=2, col ="lightblue", main ="Most frequent words",)
#plotar gráfico de barras
barplot(aux[1:10], las=2, col ="lightblue", main ="Palavras mais usadas",)
#plotar gráfico de barras
barplot(aux[1:5], las=2, col ="lightblue", main ="Palavras mais usadas",)
barplot(aux, las=2, col = rainbow(10))
motivos <- read.csv("motivos.csv", header = T, stringsAsFactors = FALSE)
motivos <- read_csv("motivos.csv")
#colapsando todos os comentários em um vetor de uma posição
motivos <- paste(motivos$`2019.1`, collapse = " ")
#processar o texto é com tm
#converter os dados em um formato chamado corpus que
#pode ser processado pelo tm
VS <- VectorSource(motivos)
corpus <- Corpus(VS)
#Verificar o corpus gerado
inspect(corpus)
#limpeza
#tudo minúsculo
corpus <- tm_map(corpus, content_transformer(tolower))
#removendo pontuação
corpus <- tm_map(corpus, removePunctuation)
#removendo espaços extras em branco
corpus <- tm_map(corpus, stripWhitespace)
#remover numeros
corpus <- tm_map(corpus, removeNumbers)
#remover stopwords
corpus <- tm_map(corpus, removeWords, stopwords('portuguese'))
#verificação
inspect(corpus)
#converter para o formato de matrix
tdm <- as.matrix(TermDocumentMatrix(corpus))
#Fornecer as frequencias ordenadas de cada palavra
fre <- sort(rowSums(tdm), decreasing = TRUE)
#escolhedo um subconjunto dos dados
aux<- subset(fre, fre>2)
#plotar gráfico de barras
barplot(aux, las=2, col = rainbow(10))
#processar o texto é com tm
#converter os dados em um formato chamado corpus que
#pode ser processado pelo tm
VS <- VectorSource(tweets)
corpus <- Corpus(VS)
#Verificar o corpus gerado
inspect(corpus)
#limpeza
#tudo minúsculo
corpus <- tm_map(corpus, content_transformer(tolower))
#removendo pontuação
corpus <- tm_map(corpus, removePunctuation)
#removendo espaços extras em branco
corpus <- tm_map(corpus, stripWhitespace)
#remover numeros
corpus <- tm_map(corpus, removeNumbers)
#remover stopwords
corpus <- tm_map(corpus, removeWords, stopwords('portuguese'))
#verificação
inspect(corpus)
#converter para o formato de matrix
tdm <- as.matrix(TermDocumentMatrix(corpus))
#Fornecer as frequencias ordenadas de cada palavra
fre <- sort(rowSums(tdm), decreasing = TRUE)
#escolhedo um subconjunto dos dados
aux<- subset(fre, fre>2)
#plotar gráfico de barras
barplot(aux[1:5], las=2, col ="lightblue", main ="Palavras mais usadas",)
head(aux)
barplot(aux[1:25], las=2, col ="lightblue", main ="Palavras mais usadas",)
#plotar gráfico de barras
barplot(aux[1:25], las=1, col ="lightblue", main ="Palavras mais usadas",)
typeof(aux)
head(aux)
head(aux)
typeof(fre)
head(fre)
aux2 <- aux[1:25]
#plotar gráfico de barras
barplot(aux2, las=2, col ="lightblue", main ="Palavras mais usadas",)
aux2 <- aux[1:25]
#plotar gráfico de barras
barplot(aux2, las=2, col ="lightblue", main ="Palavras mais usadas",)
head(aux2)
head(aux2$head())
head(aux2[1])
head(colnames(aux2))
colnames(aux2)
row.names(aux2)
row.names(aux2)
print(row.names(aux2))
head(aux2[[2]])
head(aux2[[1]])
head(aux2[1[1]])
head(aux2[1[]])
head(aux2[1[]])
head(aux2[1])
head(aux2[1][1])
head(aux2[1,[1]])
head(aux2[1[1]])
dimnames(aux2[1])
dimnames(aux2)
names(aux2)
barplot(aux2, las=2, col ="lightblue", main ="Palavras mais usadas",names.arg = names(aux2) )
aux2 <- aux[1:20]
#plotar gráfico de barras
barplot(aux2, las=2, col ="lightblue", main ="Palavras mais usadas",names.arg = names(aux2) )
#plotar gráfico de barras
barplot(aux2, las=1, col ="lightblue", main ="Palavras mais usadas",names.arg = names(aux2) )
barplot(aux2, las=5, col ="lightblue", main ="Palavras mais usadas",names.arg = names(aux2) )
barplot(aux2, las=2, col ="lightblue", main ="Palavras mais usadas",names.arg = names(aux2), density=10 )
#plotar gráfico de barras
barplot(aux2, las=2, col ="lightblue", main ="Palavras mais usadas",names.arg = names(aux2), density=1 )
tabela <-table(aux2)
head(tabela)
age <- c(17,18,18,17,18,19,18,16,18,18)
table(age)
table(corpus)
table(tdm)
head(table(tdm))
barplot(table(tdm),
main="Age Count of 10 Students",
xlab="Age",
ylab="Count",
border="red",
col="blue",
density=10
)
barplot(table(age),
main="Age Count of 10 Students",
xlab="Age",
ylab="Count",
border="red",
col="blue",
density=10
)
barplot(aux2, las=2, col ="lightblue", main ="Palavras mais usadas",names.arg = names(aux2))
barplot(aux2, las=2, col ="lightblue", main ="Palavras mais usadas",names.arg = names(aux2))
barplot(aux2, las=2, col ="lightblue", main ="Palavras mais usadas",names.arg = names(aux2), horiz=T,)
barplot(table(age),
main="Age Count of 10 Students",
xlab="Age",
ylab="Count",
border="red",
col="blue",
density=10,
horiz=T,
)
barplot(d[1:10,]$freq, las = 2, names.arg = d[1:10,]$word,
col ="lightblue", main ="Most frequent words",
ylab = "Word frequencies")
wordcloud(corpus, min.freq = 1, max.words = 70,
random.order = FALSE, rot.per = 0.25,
colors=brewer.pal(10,"Dark2"),res=300,scale=c(12,.3))
wordcloud(corpus, min.freq = 1, max.words = 70,
random.order = FALSE, rot.per = 0.25,
colors=brewer.pal(10,"Dark2"),res=150,scale=c(12,.3))
barplot(aux2, las=2, col ="lightblue", main ="Palavras mais usadas",names.arg = names(aux2), horiz=T,)
wordcloud(corpus, min.freq = 1, max.words = 70,
random.order = FALSE, rot.per = 0.25,
colors=brewer.pal(10,"Dark2"),res=10,scale=c(12,.3))
barplot(aux2, las=2, col ="lightblue", main ="Palavras mais usadas",names.arg = names(aux2), horiz=T,)
age <- c(17,18,18,17,18,19,18,16,18,18)
table(tdm)
head(table(tdm))
barplot(table(age),
main="Age Count of 10 Students",
xlab="Age",
ylab="Count",
border="red",
col="blue",
density=10,
horiz=T,
)
install.packages("ggplot2")
library(ggplot2)
# Create data
data <- data.frame(
name=c("ANDERSON FERREIRA","DANILO CABRAL","JONES MANOEL","MARÍLIA ARRAES","MIGUEL COELHO","PASTOR WELLINGTON", "RAQUEL LYRA") ,
value=c(8265000,10442000,23261,6037500,6875089, 390000,5859000)
)
# Barplot
ggplot(data, aes(x=Candidato, y=Total)) +
geom_bar(stat = "identity")
data <- data.frame(
Candidato=c("ANDERSON FERREIRA","DANILO CABRAL","JONES MANOEL","MARÍLIA ARRAES","MIGUEL COELHO","PASTOR WELLINGTON", "RAQUEL LYRA") ,
Total=c(8265000,10442000,23261,6037500,6875089, 390000,5859000)
)
ggplot(data, aes(x=Candidato, y=Total)) +
geom_bar(stat = "identity")
barplot(height=data$Total, names=data$Candidato)
barplot(height=data$Total, names=data$Candidato,horiz=T, las=1)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000))
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000), res=300)
par(mar=c(11,4,4,4))
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000))
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000),cex.names=0.5)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000),cex.names=0.7)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000),cex.names=0.6)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000),cex.names=0.5)
par(mar=c(11,4,4,4))
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000),cex.names=0.5,scipen=999)
scipen=999
options(scipen=999)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000),cex.names=0.5)
par(mar=c(10,4,4,4))
par(mar=c(10,4,4,4))
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000),cex.names=0.5)
par(mar=c(3,4,4,4))
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000),cex.names=0.5)
max.col(data$Total)
max(data$Total)
par(mar=c(3,4,4,4))
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10542000),cex.names=0.5)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,20542000),cex.names=0.5
)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,11542000),cex.names=0.5)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,14542000),cex.names=0.5)
sum(data$Total)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,13542000),cex.names=0.5)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,13542000),cex.names=0.5, color="dark")
?barplot
barplot(height=data$Total, names=data$Candidato, ylim=c(0,13542000),cex.names=0.5, col="blue")
barplot(height=data$Total, names=data$Candidato, ylim=c(0,13542000),cex.names=0.5, col="#fffff")
barplot(height=data$Total, names=data$Candidato, ylim=c(0,13542000),cex.names=0.5, col="#ffffff")
barplot(height=data$Total, names=data$Candidato, ylim=c(0,13542000),cex.names=0.5, col="lightred")
barplot(height=data$Total, names=data$Candidato, ylim=c(0,13542000),cex.names=0.5, col="darkred")
library(ggplot2)
# Create data
data <- data.frame(
Candidato=c("ANDERSON FERREIRA","DANILO CABRAL","JONES MANOEL","MARÍLIA ARRAES","MIGUEL COELHO","PASTOR WELLINGTON", "RAQUEL LYRA") ,
Total=c(8265000,10442000,23261,6037500,6875089, 390000,5859000)
)
# Barplot
ggplot(data, aes(x=Candidato, y=Total)) +
geom_bar(stat = "identity")
options(scipen=999)
par(mar=c(3,4,4,4))
barplot(height=data$Total, names=data$Candidato, ylim=c(0,13542000),cex.names=0.5, col="darkred")
sum(data$Total)
(23261 * 100)/sum(data$Total)
(8265000 * 100)/sum(data$Total)
(10442000 * 100)/sum(data$Total)
(6037500 * 100)/sum(data$Total)
(6875089 * 100)/sum(data$Total)
(390000 * 100)/sum(data$Total)
(5859000 * 100)/sum(data$Total)
0.06138787 + 21.81208 + 27.55738 + 15.93351 + 18.14398 + 1.029245 + 15.46243
setwd("~/programando/erre/aprendendoerre/aula11")
par()
x<-1:15
y<- x**2
plot(x,y)
x<-1:15
y<- x*2
plot(x,y)
plot(x,y, type = "l")
x<-1:15
y<- x**1.75
plot(x,y)
plot(x,y, type = "l")
plot(x,y, type = "o", pch=3)
plot(x,y, type = "o", pch=2)
plot(x,y, type = "o", pch=@)
plot(x,y, type = "o", pch='@')
plot(x,y, type = "o", pch='@',
cex=2, col="red")
plot(x,y, type = "o", pch='2',
cex=2, col="red")
plot(x,y, type = "o", pch=2,
cex=2, col="red")
plot(x,y, type = "o", pch=2,
cex=2, col="red",
xlab = "Eixo X",
ylab = "Eixo y",
main= "Gráfico simples")
plot(x,y, type = "o", pch=2,
cex=2, col="red",
xlab = "Eixo X",
ylab = "Eixo y",
main= "Gráfico simples",
cex.lab=1.5, cex.axis=2, cex.main=2)
t<- x**3
lines(t, type = "o", col="blue")
plot(x,y, type = "o", pch=2,
cex=2, col="red",
xlab = "Eixo X",
ylab = "Eixo y",
main= "Gráfico simples",
cex.lab=1.5, cex.axis=2, cex.main=2,
xlim = c(0,15),
ylim= c(0,3375))
lines(t, type = "o", col="blue")
legend("topleft", pch = c(3,1),
col = c("red","blue"),
legend = c("Dados 1", "Dados 2"))
#legend(x,y)
legend("topleft", pch = c(3,2),
col = c("red","blue"),
legend = c("Dados 1", "Dados 2"))
legend("topleft", pch = c(2,1),
col = c("red","blue"),
legend = c("Dados 1", "Dados 2"))
par(mfrow=c(1,2))
plot(x,y, type = "o", pch=3, cex=2, col="red")
plot(x,y, type = "o", pch=3, xlab="Eixo x", ylab = "Eixo Y",
main = "Gráfico simples", cex.lab=1.5, cex.axis=2)
