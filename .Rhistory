setwd("~/programando/erre/aprendendoerre")
cat("Eu", "amo", "a", "Rural")
paste("Eu", "amo", "a", "Rural")
paste("Eu", "amo", "a", "Rural", sep="_")
txt <- ("Eu amo a Ruralinda")
strsplit(txt,split = " ")
toupper(txt)
tolower(txt)
library(stringr)
installed.packages("stringr")
install.packages("stringr")
library(stringr)
str_trim(txt)
txt <- ("  Eu amo a Ruralinda  ")
str_trim(txt)
#subistuição de texto
txt1 <- ("Eu amo a Ruralinda")
gsub("Ruralinda", "UFRPE", txt1)
#fatiando string
substr(txt,1,6)
#fatiando string
substr(str_trim(txt),1,6)
#conta a quantidade de caracteres
nchar(txt)
#expressões regulares
#necessario pacote stringr
strings <- c("^ab","ab","abc","abd","abe", "ab 12")
grep("ab.",strings, value = TRUE)
texto = c("Eu", "Amo", "A", "Rural")
grep(pattern = "[al]", texto, value = TRUE)
texto = c("Eu", "Amo", "a", "Rural")
grep(pattern = "[al]", texto, value = TRUE)
grep(pattern = "[al+]", texto, value = TRUE)
grep(pattern = "[al]+", texto, value = TRUE)
grep(pattern = "al", texto, value = TRUE)
grep(pattern = "[al]", texto, value = TRUE)
txt <-("Eu.amo.a.Ruralinda")
gsub(pattern = "\\.", " ", txt)
acccb
strings <-c("a","ab","acb","accb","acccb","accccb")
grep("ac*b", strings, value= TRUE)
grep("ac+b", strings, value= TRUE)
grep("ac?b", strings, value= TRUE)
grep("ac{2}b", strings, value= TRUE)
grep("ac{2,}b", strings, value= TRUE)
grep("ac{2,3}b", strings, value= TRUE)
grep("^ab", strings, value= TRUE)
grep("^ac", strings, value= TRUE)
string <-c ("Eu amo a Rural 2020")
gsub("\\d", "_", string)
strings <- c("^ab","ab","abc","abd","abe", "ab 12")
grep("abc|abd",strings, value = TRUE)
texto <-"Eu gosto de Cerveja! #cerveja, @cade_minha_cerveja, Eu gosto (v3.2.2) #rr2020"
# remove espaços em branco ou tabs>
gsub(pattern= "[[:blank:]]", replacement= "", texto)
# Substitui pontuação por espaçoesem branco>
gsub(pattern= "[[:punct:]]", replacement= " ", texto)
# remove caracteres alfanuméricos>
gsub(pattern= "[[:alnum:]]", replacement= "", texto)
#removendo caracteres
string<- "Meu numero é 1006781"
gsub(pattern = "[^0-9]", replacement = "",x=string)
#retornando o index de um valor
valores <-c("A1","A2","A3","A4","A5","A6","A7")
grep(pattern "A1|A4", x= valores, value= F)
grep(pattern = "A1|A4", x= valores, value= F)
v<-c(20,30,4,934,1077,22)
paste(v, sep="m")
v<-c(20,30,4,934,1077,22)
paste(v, sep="m")
paste(v, sep='m')
(v, sep='m', collapse = 'm')
paste(v, collapse = 'm')
paste(c(v), collapse = 'm')
paste(c(v),sep = " ", collapse = 'm')
paste(c(v),sep = "m", collapse = 'm')
paste(c(v),'m')
paste(c(v),'m', sep="")
poema = read.delim("poema", header=FALSE)
poema = read.delim("poema.txt", header=FALSE)
poema = read.delim("aula5/poema.txt", header=FALSE)
nchar(poema)
nchar(poema)
nchar(v)
txt = c("eeer","3ca1n","fg","can","man","sigmean","fa3nta","fan")
grep(pattern = "(c|m|f)an", txt, value=TRUE)
txt = "eeer3GHJca1nfgSigmanfaUIOntafan"
library(stringr)
str_extract_all(string=string,pattern="[A-Z]")
str_extract_all(string=txt,pattern="[A-Z]")
str_extract_all(string=txt,pattern="[A-Z]|[0-9]")
str_extract_all(string=txt,pattern="[:upper:]|[digit]")
str_extract_all(string=txt,pattern="[[:upper:]]|[[digit]]")
str_extract_all(string=txt,pattern="[[:upper:]][[digit]]")
str_extract_all(string=txt,pattern="[[:upper:]]|[[:digit:]]")
txt = "tttyUFRPE19PPGIAkjgkjghk2j34j321UFRPEcapdPPGIA"
str_extract_all(string=txt,pattern="UFRPE*PPGIA")
str_extract_all(string=txt,pattern="UFRPE[*]PPGIA")
str_extract_all(string=txt,pattern="UFRPE[*]+PPGIA")
str_extract_all(string=txt,pattern="UFRPEPPGIA")
str_extract_all(string=txt,pattern="UFRPE[:alnum:]*PPGIA")
str_extract_all(string=txt,pattern="UFRPE[:alnum:]*PPGIA$")
str_extract_all(string=txt,pattern="UFRPE\\S*PPGIA$")
str_extract_all(string=txt,pattern="UFRPE\\S*PPGIA\\S*")
txt = "tttyUFRPE19PPGIAkjgkjghk2j34j321UFPEcapdPPGIA"
str_extract_all(string=txt,pattern="UFRPE\\S*PPGIA")
txt = "tttyUFRPE19PPGIAkjgkjghk2j34j321UFRPEcapdPPGIA"
str_extract_all(string=txt,pattern="UFRPE\\S*PPGIA")
str_extract_all(string=txt,pattern="UFRPE\\S*[PPGIA]$")
str_extract_all(string=txt,pattern="^[UFRPE]\\S*[PPGIA]$")
txt = "tttyUFRPE19PPGIAkjgkjghk2j34j321UFRPEcapdPPGIA"
str_extract_all(string=txt,pattern="^[UFRPE]\\S*[PPGIA]$")
str_extract_all(string=txt,pattern="^[UFRPE].*[PPGIA]$")
str_extract_all(string=txt,pattern="^[UFRPE]\\S*PPGIA$")
str_extract_all(string=txt,pattern="^UFRPE\\S*PPGIA$")
str_extract_all(string=txt,pattern="UFRPE\\S*PPGIA$")
str_extract_all(string=txt,pattern="UFRPE\\S*PPGI$")
str_extract_all(string=txt,pattern="UFRPE\\w*PPGIA$")
str_extract_all(string=txt,pattern="UFRPE$\\w*PPGIA")
str_extract_all(string=txt,pattern="UFRPE$")
str_extract_all(string=txt,pattern="UFRPE")
str_extract_all(string=txt,pattern="UFRPE\w")
str_extract_all(string=txt,pattern="UFRPE\\w")
str_extract_all(string=txt,pattern="UFRPE\\w*")
str_extract_all(string=txt,pattern="UFRPE\\w*PPGIA")
str_extract_all(string=txt,pattern="UFRPE....PPGIA")
str_extract_all(string=txt,pattern="UFRPE......PPGIA")
str_extract_all(string=txt,pattern="UFRPE......PPGIA")
str_extract_all(string=txt,pattern="UFRPE.PPGIA")
str_extract_all(string=txt,pattern="UFRPE[*]PPGIA")
str_extract_all(string=txt,pattern="UFRPE[\\w]*PPGIA")
str_extract_all(string=txt,pattern="UFRPE[\\w]{2,4}PPGIA")
mlk = read.delim("aula5/mlk.txt", header=FALSE)
mlk
grep(pattern = "(N|n)egr(a|o)(s)+", mlk, value=TRUE)
grep(pattern = "(N|n)egr(a|o)(s)+", mlk, value=TRUE)
grep(pattern = "(c|m|f)an", txt, value=TRUE)
txt = c("eeer","3ca1n","fg","can","man","sigmean","fa3nta","fan")
grep(pattern = "(c|m|f)an", txt, value=TRUE)
grep(pattern = "(N|n)egr(a|o)(s)?", mlk, value=TRUE)
grep(pattern = "(N|n)egr(a|o)(s)", mlk, value=TRUE)
poema = read.delim("aula5/poema.txt", header=FALSE)
nchar(poema)
poema
grep(pattern = "(N|n)egr(a|o)(s)", mlk, value=TRUE)
grep(pattern = "Negro", mlk, value=TRUE)
str_extract_all(string=txt,pattern="Negro")
grep(pattern = "Negro", mlk, value=TRUE)
grep(pattern = "nação", mlk, value=TRUE)
grep(pattern = "nação", readLines("aula5/mlk.txt"), value=TRUE)
grep(pattern = " ", readLines("aula5/mlk.txt"), value=TRUE)
grep(pattern = "Negro", readLines("aula5/mlk.txt"), value=TRUE)
grep(pattern = "Negro", readLines("aula5/mlk.txt"))
grep(pattern = "Negro", readLines("aula5/mlk.txt"), value = TRUE)
grep(pattern = "Negros", readLines("aula5/mlk.txt"), value = TRUE)
grep(pattern = "Negros", readLine("aula5/mlk.txt"), value = TRUE)
grep(pattern = "Negros", readLines("aula5/mlk.txt"), value = TRUE)
grep(pattern = "(n|N)egr(a|o)", readLines("aula5/mlk.txt"), value = TRUE)
grep(pattern = "(n|N)egr(a|o)?(s)", readLines("aula5/mlk.txt"), value = TRUE)
grep(pattern = "(n|N)egr(a|o)(s)?", readLines("aula5/mlk.txt"), value = TRUE)
poema
grep(pattern="pedra", poema)
nchar(poema)
grep(pattern="pedra", poema, value= TRUE)
grep("pedra", poema, value= TRUE)
grep(pattern = "(n|N)egr(a|o)(s)?", readLines("aula5/mlk.txt"), value = TRUE, fixed = TRUE)
grep(pattern = "(n|N)egr(a|o)(s)?", readLines("aula5/mlk.txt"), value = TRUE)
grep(pattern = "(n|N)egr(a|o)(s)", readLines("aula5/mlk.txt"), value = TRUE)
grep(pattern = "(n|N)egr(a|o)(s)?", readLines("aula5/mlk.txt"), value = TRUE)
grup <- c("abababa","aaba","aabbaa","aba","aabababa")
grep(pattern="a(ab)*a")
grep(pattern="a(ab)*a", grup)
grep(pattern="a(ab)*a", grup, value = T)
grup <- c("abc","ac","abbb","bbc")
grep(pattern="ab+c?", grup, value = T)
grup <- c("abc","abbbbbbbb","azc","abcbcbcbc","ac","asccbbbbcbcccc")
grep(pattern="a.[bc]+", grup, value = T)
grup <- c("abc","xyz","abc|xyz")
grep(pattern="abc|xyz", grup, value = T)
grup <- c("abc","xyz","abc\|xyz")
grup <- c("abc","xyz","abc\\|xyz")
grep(pattern="abc|xyz", grup, value = T)
grep(pattern="abc\\|xyz", grup, value = T)
grep(pattern="abc\|xyz", grup, value = T)
grep(pattern="abc|", grup, value = T)
grup <- c("abc","xyz","abc|xyz")
grep(pattern="abc\\|xyz", grup, value = T)
grep(pattern="abc|xyz", grup, value = T)
grup <- c("battle!",
"Hot",
"green",
"swamping.",
"jump up.",
"undulate?",
"is.?")
grep(pattern="[a-z]+[\.\?!]", grup, value = T)
grep(pattern="[a-z]+[\\.\?!]", grup, value = T)
grep(pattern="[a-z]+[\\.\\?!]", grup, value = T)
grup <- c("Butt=",
"BotHEr,=",
"Ample",
"FIdDlE7h=",
"Brittle =",
"Other.=")
grep(pattern="[a-zA-Z]*[^,]=", grup, value = T)
grup <- c("A. B",
"c! d",
"e f",
"g. H",
"i? J",
"k L")
grep(pattern="[a-z][\.\?!]\s+[A-Z]", grup, value = T)
grep(pattern="[a-z][\\.\\?!]\\s+[A-Z]", grup, value = T)
grup <- c("very fat man",
"fat tall man",
"very very fat ugly man",
"very very very tall man")
grep(pattern="(very )+(fat )?(tall|ugly) man", grup, value = T)
grup <- c("<an xml tag>",
"<opentag> <closetag>",
"</closetag>",
"<>",
"<with attribute=”77”>")
grep(pattern="<[^>]+>", grup, value = T)
aux<- read.delim("https://www.dropbox.com/s/4yr2woj8r1p5sbn/gapminderDataFiveYear.txt?dl=1")
View(aux)
aux$country
grep(pattern="",aux$country, value= TRUE)
grep(pattern="Bra",aux$country, value= TRUE)
grep(pattern="and",aux$country, value= TRUE)
grep(pattern="and$",aux$country, value= TRUE)
grep(pattern="\s[and]\s",aux$country, value= TRUE)
grep(pattern="\\s[and]\\s",aux$country, value= TRUE)
grep(pattern="\\s(and)\\s",aux$country, value= TRUE)
grep(pattern="Ba(a-z)*",aux$country, value= TRUE)
grep(pattern="Ba(a-z)+",aux$country, value= TRUE)
grep(pattern="Ba(a-z)",aux$country, value= TRUE)
grep(pattern="Ba",aux$country, value= TRUE)
grep(pattern="^Ba",aux$country, value= TRUE)
grep(pattern="land$",aux$country, value= TRUE)
grep(pattern="Ga",aux$country, value= TRUE)
View(aux)
