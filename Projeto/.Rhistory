colors=brewer.pal(10,"Dark2"),res=150,scale=c(12,.3))
barplot(aux2, las=2, col ="lightblue", main ="Palavras mais usadas",names.arg = names(aux2), horiz=T,)
wordcloud(corpus, min.freq = 1, max.words = 70,
random.order = FALSE, rot.per = 0.25,
colors=brewer.pal(10,"Dark2"),res=10,scale=c(12,.3))
barplot(aux2, las=2, col ="lightblue", main ="Palavras mais usadas",names.arg = names(aux2), horiz=T,)
age <- c(17,18,18,17,18,19,18,16,18,18)
table(tdm)
head(table(tdm))
barplot(table(age),
main="Age Count of 10 Students",
xlab="Age",
ylab="Count",
border="red",
col="blue",
density=10,
horiz=T,
)
install.packages("ggplot2")
library(ggplot2)
# Create data
data <- data.frame(
name=c("ANDERSON FERREIRA","DANILO CABRAL","JONES MANOEL","MARÍLIA ARRAES","MIGUEL COELHO","PASTOR WELLINGTON", "RAQUEL LYRA") ,
value=c(8265000,10442000,23261,6037500,6875089, 390000,5859000)
)
# Barplot
ggplot(data, aes(x=Candidato, y=Total)) +
geom_bar(stat = "identity")
data <- data.frame(
Candidato=c("ANDERSON FERREIRA","DANILO CABRAL","JONES MANOEL","MARÍLIA ARRAES","MIGUEL COELHO","PASTOR WELLINGTON", "RAQUEL LYRA") ,
Total=c(8265000,10442000,23261,6037500,6875089, 390000,5859000)
)
ggplot(data, aes(x=Candidato, y=Total)) +
geom_bar(stat = "identity")
barplot(height=data$Total, names=data$Candidato)
barplot(height=data$Total, names=data$Candidato,horiz=T, las=1)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000))
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000), res=300)
par(mar=c(11,4,4,4))
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000))
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000),cex.names=0.5)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000),cex.names=0.7)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000),cex.names=0.6)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000),cex.names=0.5)
par(mar=c(11,4,4,4))
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000),cex.names=0.5,scipen=999)
scipen=999
options(scipen=999)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000),cex.names=0.5)
par(mar=c(10,4,4,4))
par(mar=c(10,4,4,4))
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000),cex.names=0.5)
par(mar=c(3,4,4,4))
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10442000),cex.names=0.5)
max.col(data$Total)
max(data$Total)
par(mar=c(3,4,4,4))
barplot(height=data$Total, names=data$Candidato, ylim=c(0,10542000),cex.names=0.5)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,20542000),cex.names=0.5
)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,11542000),cex.names=0.5)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,14542000),cex.names=0.5)
sum(data$Total)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,13542000),cex.names=0.5)
barplot(height=data$Total, names=data$Candidato, ylim=c(0,13542000),cex.names=0.5, color="dark")
?barplot
barplot(height=data$Total, names=data$Candidato, ylim=c(0,13542000),cex.names=0.5, col="blue")
barplot(height=data$Total, names=data$Candidato, ylim=c(0,13542000),cex.names=0.5, col="#fffff")
barplot(height=data$Total, names=data$Candidato, ylim=c(0,13542000),cex.names=0.5, col="#ffffff")
barplot(height=data$Total, names=data$Candidato, ylim=c(0,13542000),cex.names=0.5, col="lightred")
barplot(height=data$Total, names=data$Candidato, ylim=c(0,13542000),cex.names=0.5, col="darkred")
library(ggplot2)
# Create data
data <- data.frame(
Candidato=c("ANDERSON FERREIRA","DANILO CABRAL","JONES MANOEL","MARÍLIA ARRAES","MIGUEL COELHO","PASTOR WELLINGTON", "RAQUEL LYRA") ,
Total=c(8265000,10442000,23261,6037500,6875089, 390000,5859000)
)
# Barplot
ggplot(data, aes(x=Candidato, y=Total)) +
geom_bar(stat = "identity")
options(scipen=999)
par(mar=c(3,4,4,4))
barplot(height=data$Total, names=data$Candidato, ylim=c(0,13542000),cex.names=0.5, col="darkred")
sum(data$Total)
(23261 * 100)/sum(data$Total)
(8265000 * 100)/sum(data$Total)
(10442000 * 100)/sum(data$Total)
(6037500 * 100)/sum(data$Total)
(6875089 * 100)/sum(data$Total)
(390000 * 100)/sum(data$Total)
(5859000 * 100)/sum(data$Total)
0.06138787 + 21.81208 + 27.55738 + 15.93351 + 18.14398 + 1.029245 + 15.46243
setwd("~/programando/erre/aprendendoerre/Projeto")
dados <- read.csv("googleplaystore.csv")
dados.unique()
dados <- read.csv("googleplaystore.csv")
summary(dados)
dados <- read.csv("googleplaystore.csv")
head(dados)
is.na(dados)
is.na(dados$Rating)
#is.na(dados$Rating)
dados$Rating[is.na(is.dados$Rating)] <- 0
#is.na(dados$Rating)
dados$Rating[is.na(dados$Rating)] <- 0
is.na(dados$Rating)
#is.na(dados$Rating)
dados$Rating[is.na(dados$Rating)] <- 2.5
#is.na(dados$Rating)
dados$Rating[is.na(dados$Rating)] <- 2.5
dados <- read.csv("googleplaystore.csv")
head(dados)
#is.na(dados$Rating)
df <- dados[complete.cases(df), ]
#is.na(dados$Rating)
df <- dados[complete.cases(dados), ]
head(df)
#is.na(dados$Rating)
df <- dados[complete.cases(dados), ]
head(df)
lean(df)
#is.na(dados$Rating)
df <- dados[complete.cases(dados), ]
head(df)
length(df)
#is.na(dados$Rating)
df <- dados[complete.cases(dados), ]
head(df)
length(df$App)
#is.na(dados$Rating)
df <- dados[complete.cases(dados), ]
head(df)
print("Número de dados completos: "+length(df$App))
#is.na(dados$Rating)
df <- dados[complete.cases(dados), ]
head(df)
print("Número de dados completos: "+ length(df$App))
#is.na(dados$Rating)
df <- dados[complete.cases(dados), ]
head(df)
print(cat("Número de dados completos: "+ length(df$App)))
#is.na(dados$Rating)
df <- dados[complete.cases(dados), ]
head(df)
print(cat("Número de dados completos: ", length(df$App)))
#is.na(dados$Rating)
df <- dados[complete.cases(dados), ]
head(df)
print(cat("Número de dados completos: ",length(df$App)))
#is.na(dados$Rating)
df <- dados[complete.cases(dados), ]
head(df)
print(cat("Número de dados completos: ",length(df)))
#is.na(dados$Rating)
df <- dados[complete.cases(dados), ]
head(df)
print(cat("Número de dados completos: ",length(row(df))))
#is.na(dados$Rating)
df <- dados[complete.cases(dados), ]
head(df)
print(cat("Número de dados completos: ",lrow(df))
#is.na(dados$Rating)
df <- dados[complete.cases(dados), ]
head(df)
print(cat("Número de dados completos: ",row(df))
#is.na(dados$Rating)
df <- dados[complete.cases(dados), ]
head(df)
print(cat("Número de dados completos: ",row(df)))
#is.na(dados$Rating)
df <- dados[complete.cases(dados), ]
head(df)
print(cat("Número de dados completos: ",row(df$App)))
#is.na(dados$Rating)
df <- dados[complete.cases(dados), ]
head(df)
print(cat("Número de dados completos: ",nrow(df)))
#is.na(dados$Rating)
df <- dados[complete.cases(dados), ]
head(df)
print("Número de dados completos: ",nrow(df))
#is.na(dados$Rating)
df <- dados[complete.cases(dados), ]
head(df)
print(nrow(df))
#is.na(dados$Rating)
df <- dados[complete.cases(dados), ]
head(df)
print("Número de dados completos: ",nrow(df))
#is.na(dados$Rating)
df <- dados[complete.cases(dados), ]
head(df)
print(paste0("Número de dados completos: ",nrow(df)))
#is.na(dados$Rating)
df <- dados[complete.cases(dados), ]
#head(df)
print(paste0("Número de dados completos: ",nrow(df)))
df[df$Rating > 5] <- 5
df[df$Rating > 5,] <- 5
df[df$Rating < 0,] <- 0
View(df)
View(dados)
unique(df$Installs)
#Verifiquei abaixo as possibilidades antes de substituir
#unique(df$Installs)
df[df$Installs == "10,000+",] <- 10000
df[df$Installs == "500,000+",] <- 500000
df[df$Installs == "5,000,000+",] <- 500000
df[df$Installs == "50,000,000+",] <- 5000000
df[df$Installs == "100,000+",] <- 100000
df[df$Installs == "50,000+",] <- 50000
df[df$Installs == "1,000,000+",] <- 1000000
df[df$Installs == "10,000,000+",] <- 10000000
df[df$Installs == "5,000+",] <- 5000
df[df$Installs == "100,000,000+",] <- 100000000
df[df$Installs == "1,000,000,000+",] <- 1000000000
df[df$Installs == "1,000+",] <- 1000
df[df$Installs == "500,000,000+",] <- 500000000
df[df$Installs == "100+",] <- 100
df[df$Installs == "500+",] <- 500
df[df$Installs == "10+",] <- 10
df[df$Installs == "5+",] <- 5
df[df$Installs == "50+",] <- 50
df[df$Installs == "1+",] <- 1
df[df$Installs == "5",] <- 5
#is.na(dados$Rating)
df <- dados[complete.cases(dados), ]
#head(df)
print(paste0("Número de dados completos: ",nrow(df)))
dados <- read.csv("googleplaystore.csv")
head(dados)
#is.na(dados$Rating)
df <- dados[complete.cases(dados), ]
#head(df)
print(paste0("Número de dados completos: ",nrow(df)))
df[df$Rating > 5,] <- 5
df[df$Rating < 0,] <- 0
#Verifiquei abaixo as possibilidades antes de substituir
#unique(df$Installs)
df$Installs[df$Installs == "10,000+",] <- 10000
#Verifiquei abaixo as possibilidades antes de substituir
#unique(df$Installs)
df[df$Installs == "10,000+",] <- 10000
df[df$Installs == "500,000+",] <- 500000
df[df$Installs == "5,000,000+",] <- 500000
df[df$Installs == "50,000,000+",] <- 5000000
df[df$Installs == "100,000+",] <- 100000
df[df$Installs == "50,000+",] <- 50000
df[df$Installs == "1,000,000+",] <- 1000000
df[df$Installs == "10,000,000+",] <- 10000000
df[df$Installs == "5,000+",] <- 5000
df[df$Installs == "100,000,000+",] <- 100000000
df[df$Installs == "1,000,000,000+",] <- 1000000000
df[df$Installs == "1,000+",] <- 1000
df[df$Installs == "500,000,000+",] <- 500000000
df[df$Installs == "100+",] <- 100
df[df$Installs == "500+",] <- 500
df[df$Installs == "10+",] <- 10
df[df$Installs == "5+",] <- 5
df[df$Installs == "50+",] <- 50
df[df$Installs == "1+",] <- 1
df[df$Installs == "5",] <- 5
View(df)
dados <- read.csv("googleplaystore.csv")
head(dados)
#is.na(dados$Rating)
df <- dados[complete.cases(dados), ]
#head(df)
print(paste0("Número de dados completos: ",nrow(df)))
df[df$Rating > 5,] <- 5
df[df$Rating < 0,] <- 0
#Verifiquei abaixo as possibilidades antes de substituir
#unique(df$Installs)
df$Installs[df$Installs == "10,000+",] <- 10000
#Verifiquei abaixo as possibilidades antes de substituir
#unique(df$Installs)
df$Installs[df$Installs == "10,000+",] <- 10000
#Verifiquei abaixo as possibilidades antes de substituir
#unique(df$Installs)
df$Installs[df$Installs == "10,000+"] <- 10000
df$Installs[df$Installs == "500,000+",] <- 500000
#Verifiquei abaixo as possibilidades antes de substituir
#unique(df$Installs)
df$Installs[df$Installs == "10,000+"] <- 10000
df$Installs[df$Installs == "500,000+"] <- 500000
df$Installs[df$Installs == "5,000,000+"] <- 500000
df$Installs[df$Installs == "50,000,000+"] <- 5000000
df$Installs[df$Installs == "100,000+"] <- 100000
df$Installs[df$Installs == "50,000+"] <- 50000
df$Installs[df$Installs == "1,000,000+"] <- 1000000
df$Installs[df$Installs == "10,000,000+"] <- 10000000
df$Installs[df$Installs == "5,000+"] <- 5000
df$Installs[df$Installs == "100,000,000+"] <- 100000000
df$Installs[df$Installs == "1,000,000,000+"] <- 1000000000
df$Installs[df$Installs == "1,000+"] <- 1000
df$Installs[df$Installs == "500,000,000+"] <- 500000000
df$Installs[df$Installs == "100+"] <- 100
df$Installs[df$Installs == "500+"] <- 500
df$Installs[df$Installs == "10+"] <- 10
df$Installs[df$Installs == "5+"] <- 5
df$Installs[df$Installs == "50+"] <- 50
df$Installs[df$Installs == "1+"] <- 1
df$Installs[df$Installs == "5"] <- 5
head(df, 200)
head(df)
dados <- read.csv("googleplaystore.csv")
head(dados)
plot_ly(type="table",header=list(values=names(data)), cells=list(values=unname(data)))
dados <- read.csv("googleplaystore.csv")
head(dados)
df <-data_frame[order(df$Rating),]
dados <- read.csv("googleplaystore.csv")
head(dados)
df <-df[order(df$Rating),]
head(dados)
dados <- read.csv("googleplaystore.csv")
head(dados)
df <-df[order(df$Rating),]
head(df)
dados <- read.csv("googleplaystore.csv")
head(dados)
df <-df[order(-df$Rating),]
head(df)
dados <- read.csv("googleplaystore.csv")
#head(dados)
df <-df[order(-df$Rating),]
head(df)
#include=FALSE
#pacotes a serem instalados
library(plotly)
library(stringr)
library(tidyr)
dados <- read.csv("googleplaystore.csv")
#head(dados)
#is.na(dados$Rating)
df <- dados[complete.cases(dados), ]
#head(df)
print(paste0("Número de dados completos: ",nrow(df)))
df[df$Rating > 5,] <- 5
df[df$Rating < 0,] <- 0
#Verifiquei abaixo as possibilidades antes de substituir
#unique(df$Installs)
df$Installs[df$Installs == "10,000+"] <- 10000
df$Installs[df$Installs == "500,000+"] <- 500000
df$Installs[df$Installs == "5,000,000+"] <- 500000
df$Installs[df$Installs == "50,000,000+"] <- 5000000
df$Installs[df$Installs == "100,000+"] <- 100000
df$Installs[df$Installs == "50,000+"] <- 50000
df$Installs[df$Installs == "1,000,000+"] <- 1000000
df$Installs[df$Installs == "10,000,000+"] <- 10000000
df$Installs[df$Installs == "5,000+"] <- 5000
df$Installs[df$Installs == "100,000,000+"] <- 100000000
df$Installs[df$Installs == "1,000,000,000+"] <- 1000000000
df$Installs[df$Installs == "1,000+"] <- 1000
df$Installs[df$Installs == "500,000,000+"] <- 500000000
df$Installs[df$Installs == "100+"] <- 100
df$Installs[df$Installs == "500+"] <- 500
df$Installs[df$Installs == "10+"] <- 10
df$Installs[df$Installs == "5+"] <- 5
df$Installs[df$Installs == "50+"] <- 50
df$Installs[df$Installs == "1+"] <- 1
df$Installs[df$Installs == "5"] <- 5
head(df)
dfOrdenado <-df[order(-df$Rating),]
head(dfOrdenado)
#head(df)
dfOrdenado <-df[order(-df$Rating),]
head(dfOrdenado:20)
#head(df)
dfOrdenado <-df[order(-df$Rating),]
top25 <- dfOrdenado[1:25,]
plot_ly( type='table',
collumnwidth= c(50,50),
collumnorder= c(0,1),
header = list(
values =c("App", "Rating"),
align= c("center","center"),
fill = list(color = c("grey", "grey")),
line= list(width= 1.5, color = 'black'),font= list(family= "Arial", size= 12, color = c("white"))
),
cells =list(
values = rbind(dfOrdenado$App, dfOrdenado$Rating),
align= c("center","center"),
line= list(width= 1.5, color = 'black'),font= list(family= "Arial", size= 12, color = c("black"))
)
)
#head(df)
dfOrdenado <-df[order(-df$Rating),]
top25 <- dfOrdenado[1:25,]
plot_ly( type='table',
#collumnwidth= c(50,50),
#collumnorder= c(0,1),
header = list(
values =c("App", "Rating"),
align= c("center","center"),
fill = list(color = c("grey", "grey")),
line= list(width= 1.5, color = 'black'),font= list(family= "Arial", size= 12, color = c("white"))
),
cells =list(
values = rbind(dfOrdenado$App, dfOrdenado$Rating),
align= c("center","center"),
line= list(width= 1.5, color = 'black'),font= list(family= "Arial", size= 12, color = c("black"))
)
)
#head(df)
dfOrdenado <-df[order(-df$Rating),]
top25 <- dfOrdenado[1:10,]
plot_ly( type='table',
#collumnwidth= c(50,50),
#collumnorder= c(0,1),
header = list(
values =c("App", "Rating"),
align= c("center","center"),
fill = list(color = c("grey", "grey")),
line= list(width= 1.5, color = 'black'),font= list(family= "Arial", size= 12, color = c("white"))
),
cells =list(
values = rbind(dfOrdenado$App, dfOrdenado$Rating),
align= c("center","center"),
line= list(width= 1.5, color = 'black'),font= list(family= "Arial", size= 12, color = c("black"))
)
)
#head(df)
dfOrdenado <-df[order(-df$Rating),]
top25 <- dfOrdenado[1,]
plot_ly( type='table',
#collumnwidth= c(50,50),
#collumnorder= c(0,1),
header = list(
values =c("App", "Rating"),
align= c("center","center"),
fill = list(color = c("grey", "grey")),
line= list(width= 1.5, color = 'black'),font= list(family= "Arial", size= 12, color = c("white"))
),
cells =list(
values = rbind(dfOrdenado$App, dfOrdenado$Rating),
align= c("center","center"),
line= list(width= 1.5, color = 'black'),font= list(family= "Arial", size= 12, color = c("black"))
)
)
#head(df)
dfOrdenado <-df[order(-df$Rating),]
top25 <- dfOrdenado[1:5,]
plot_ly( type='table',
#collumnwidth= c(50,50),
#collumnorder= c(0,1),
header = list(
values =c("App", "Rating"),
align= c("center","center"),
fill = list(color = c("grey", "grey")),
line= list(width= 1.5, color = 'black'),font= list(family= "Arial", size= 12, color = c("white"))
),
cells =list(
values = rbind(dfOrdenado$App, dfOrdenado$Rating),
align= c("center","center"),
line= list(width= 1.5, color = 'black'),font= list(family= "Arial", size= 12, color = c("black"))
)
)
#head(df)
dfOrdenado <-df[order(-df$Rating),]
top25 <- dfOrdenado[1:5,1]
plot_ly( type='table',
#collumnwidth= c(50,50),
#collumnorder= c(0,1),
header = list(
values =c("App", "Rating"),
align= c("center","center"),
fill = list(color = c("grey", "grey")),
line= list(width= 1.5, color = 'black'),font= list(family= "Arial", size= 12, color = c("white"))
),
cells =list(
values = rbind(dfOrdenado$App, dfOrdenado$Rating),
align= c("center","center"),
line= list(width= 1.5, color = 'black'),font= list(family= "Arial", size= 12, color = c("black"))
)
)
#head(df)
dfOrdenado <-df[order(-df$Rating),]
top25 <- dfOrdenado[1:25,]
plot_ly( type='table',
#collumnwidth= c(50,50),
#collumnorder= c(0,1),
header = list(
values =c("App", "Rating"),
align= c("center","center"),
fill = list(color = c("grey", "grey")),
line= list(width= 1.5, color = 'black'),font= list(family= "Arial", size= 12, color = c("white"))
),
cells =list(
values = rbind(top25$App, top25$Rating),
align= c("center","center"),
line= list(width= 1.5, color = 'black'),font= list(family= "Arial", size= 12, color = c("black"))
)
)
#include=FALSE
#pacotes a serem instalados
install.packages("prettydoc")
library(prettydoc)
library(plotly)
library(stringr)
library(tidyr)
#include=FALSE
#pacotes a serem instalados
install.packages("bookdown")
library(prettydoc)
library(plotly)
library(stringr)
library(tidyr)
install.packages("bookdown")
install.packages("prettydoc")
install.packages("prettydoc")
sessionInfo()
